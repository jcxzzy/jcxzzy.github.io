<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小小马里奥的博客</title>
  
  <subtitle>Little Mario&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jcxzzy.github.io/"/>
  <updated>2018-08-13T00:34:52.010Z</updated>
  <id>http://jcxzzy.github.io/</id>
  
  <author>
    <name>小小马里奥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>超详细的使用Github+Hexo搭建属于自己的博客</title>
    <link href="http://jcxzzy.github.io/2018/08/12/%E8%B6%85%E8%AF%A6%E7%BB%86%E7%9A%84%E4%BD%BF%E7%94%A8Github+Hexo%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://jcxzzy.github.io/2018/08/12/超详细的使用Github+Hexo搭建属于自己的博客/</id>
    <published>2018-08-12T07:40:34.414Z</published>
    <updated>2018-08-13T00:34:52.010Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Github是什么"><a href="#Github是什么" class="headerlink" title="Github是什么"></a>Github是什么</h2><p>gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。这里用到Github，是因为我们需要通过Github得到自己的博客网站域名，而且需要使用gitHub同步我们个人博客的相关文件</p><h2 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么"></a>Hexo是什么</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="话不多说咱们进入正题"><a href="#话不多说咱们进入正题" class="headerlink" title="话不多说咱们进入正题"></a>话不多说咱们进入正题</h2><h3 id="准备相关的工具"><a href="#准备相关的工具" class="headerlink" title="准备相关的工具"></a>准备相关的工具</h3><p>1， Git： 我这里放的是<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Windows版本</a>，如果要在其他系统上部署请到<a href="https://git-scm.com/" target="_blank" rel="noopener">Git官网</a>下载</p><p>2， Node.js：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>下载安装程序</p><p>打开cmd命令行(win+r 输入cmd回车)分别执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><p>得到如下相对应的版本信息说明安装成功<br><img src="https://img-blog.csdn.net/2018081212091262?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU4ODMzMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"> </p><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开Git Bash（在任意文件夹下单击右键即可看到Git Bash），输入以下命令安装Hexo</p><pre><code class="bash">$ npm install -g hexo-cli</code></pre><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>打开Git Bash，输入命令</p><pre><code class="bash">$ hexo init [folder]</code></pre><p>例  <code>$ hexo init hexotext</code></p><p>[folder]代表的是你的hexo文件夹名，如果不写，就默认在当前文件夹初始化。 </p><p>然后进入你的hexo文件夹</p><pre><code class="bash">$ <span class="built_in">cd</span> [folder]</code></pre><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><p>需要执行generate命令生成静态文件，才能部署到服务器</p><pre><code class="bash">$ hexo g</code></pre><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><p>由于还没有配置Github，所以我们先部署到本地服务器</p><pre><code class="bash">$ hexo s</code></pre><p>在浏览器上输入<code>http://localhost:4000/</code> 即可看到下图<br><img src="https://img-blog.csdn.net/20180812123734836?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU4ODMzMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>若没有出现也不要着急可能是你的4000的端口被占用，可以重设端口</p><pre><code class="bash">$ hexo -p 5000 server</code></pre><p>打开浏览器输入<code>http://localhost:5000/</code> 即可看到你的初始博客</p><h2 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h2><h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><p>进入<a href="https://github.com" target="_blank" rel="noopener">Github官网</a><br>点击<img src="https://img-blog.csdn.net/20180812125340298?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU4ODMzMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述">进入注册界面<br>注意：注册Github的时候一定要选择一个合适的名字，因为后来博客网站的域名也会用到这个名字。虽然Github用户名支持后期修改，但是还是会带来很多不必要的麻烦。</p><h3 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h3><p>创建与你的Github用户名相对应的Github Page仓库，格式必须是username.github.io。（如图）<br><img src="https://img-blog.csdn.net/2018081213585591?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU4ODMzMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h3 id="建立关联"><a href="#建立关联" class="headerlink" title="建立关联"></a>建立关联</h3><p>进入你刚创建的仓库，复制仓库的地址<br><img src="https://img-blog.csdn.net/20180812140822277?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU4ODMzMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="https://img-blog.csdn.net/20180812140848290?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU4ODMzMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>打开hexo文件夹下的_config.yml文件，拉倒最下面，修改deploy为以下代码，repository后面的是你的仓库地址</p><pre><code class="bash">deploy:  <span class="built_in">type</span>: git  repo: git@github.com:jcxzzy/jcxzzy.github.io.git  branch: master</code></pre><p>  这里有一个需要注意的地方是所有的配置“:”符号后面都要带空格，否则执行本地测试直接失败</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>在Git Bash输入以下命令部署到Github Page</p><pre><code class="bash">$ hexo d</code></pre><p>然后在浏览器输入username.github.io就可以看到你的博客啦，如：<a href="https://jcxzzy.github.io/">jcxzzy.github.io</a></p><p>以后进行文章或主题的更新需要三步</p><p>清空缓存</p><pre><code class="bash">$ hexo clean</code></pre><p>生成静态文件</p><pre><code class="bash">$ hexo g</code></pre><p>部署</p><pre><code class="bash">$ hexo d</code></pre><p>到此你的博客已经正式上线了，下面介绍一些优化方案</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>现在我们已经看见个人博客的雏形了，但是现在的博客网页一点也不高大上。为了让它看起来更美观一些，我们可以为其更换主题<br>介绍一个强大的主题库可以在里面选择喜欢的主题进行更换：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br>这里分享一个NexT主题优化：<a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">https://www.jianshu.com/p/1f8107a8778c</a></p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>选择一个markdown编辑器，我觉得csdn自带的md编辑器就挺好用的。<br>写完之后直接导出到本地MarkDown格式，在本地找到后缀为.mb文件，把它复制到你hexo博客文件夹中 source 下的 _posts 中，默认只有一个 hello-world.md；<br>复制完之后然后使用文本编辑器打开它，在第一行加上title，内容自定，如</p><pre><code class="bash">title：超详细的使用Github+Hexo搭建属于自己的博客</code></pre><p>再将其发布就可以看到你发布的文章了</p><h2 id="在不同电脑管理hexo博客"><a href="#在不同电脑管理hexo博客" class="headerlink" title="在不同电脑管理hexo博客"></a>在不同电脑管理hexo博客</h2><p>其实，这也是我在使用Hexo搭建博客遇到的一个问题，如果我们检查自己博客在Github上的文件就会发现，github仓库里的文件和我们本地博客站点的文件夹是不同的，确切来说是少了很多内容。如果我们想在不同的电脑上管理自己的博客，就必须有源文件存在远端供我们随时下载、然后修改后重新部署到远端。</p><p>我们要理解这样一个过程：hexo -d是把本地博客源文件生成的静态网页文件同步到github上，实现部署。但是博客网站的源文件仍需要我们自己保存。这里主要有两种思路可以选择：</p><p>1.在github存放我们博客静态网页文件的仓库里另建分支brach，单独用于存放源文件。<br>2.将本地博客文件存放在码云上。</p><p>这些都是关于git的操作，所以这里不用细说了。单对于这两种方法来说，我更倾向于第二种。因为毕竟这些都是我们搭建个人博客的源文件，将来还要在网站上发表文章，很多数据都在这里。使用码云我们可以创建私有仓库，将这些源文件私有存放更好一些，而且源文件和静态博客网页文件分开存放也避免使用分支频繁切换。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>一个简单的博客至此就搭建完毕了，如果你想让你的博客变得与众不同这就需要你继续学习探索了，其实搭建一个博客是很简单的事情，坚持总结和写作才是最难的事，让我们一起加油吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Github是什么&quot;&gt;&lt;a href=&quot;#Github是什么&quot; class=&quot;headerlink&quot; title=&quot;Github是什么&quot;&gt;&lt;/a&gt;Github是什么&lt;/h2&gt;&lt;p&gt;gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本
      
    
    </summary>
    
    
  </entry>
  
</feed>
